 There are 10 ad hoc requests.
Need to run a SQL query to answer these requests



TASK 1:
SELECT
    DISTINCT market FROM  dim_customer
WHERE region = 'APAC' AND customer = "Atliq Exclusive";


Task 2 :

select t1.unique_products_2020 as unique_products_2020 ,t2.unique_products_2021 as unique_products_2021 , 
round ( (unique_products_2021 - unique_products_2020) *100/unique_products_2020, 2) as percentage_chg
from (

(select count(distinct(product_code)) as unique_products_2020
from fact_sales_monthly
where fiscal_year = 2020) t1 ,
 
(select count(distinct(product_code)) as unique_products_2021
from fact_sales_monthly
where fiscal_year = 2021) t2 ) ;


Task 3 :

SELECT segment, COUNT(DISTINCT(product_code)) AS product_count  FROM  dim_product
GROUP BY segment
ORDER BY product_count DESC ;


Task 4 :

WITH t1 AS (
 SELECT
      p.segment AS segment,
      COUNT(DISTINCT
          (CASE 
              WHEN fiscal_year = 2020 THEN s.product_code END)) AS product_count_2020,
       COUNT(DISTINCT
          (CASE 
              WHEN fiscal_year = 2021 THEN s.product_code END)) AS product_count_2021        
 FROM fact_sales_monthly AS s
 INNER JOIN dim_product AS p
 ON s.product_code = s.product_code
 GROUP BY p.segment
)
SELECT segment, product_count_2020, product_count_2021, (product_count_2021- product_count_2020) AS difference
FROM t1
ORDER BY difference DESC;

 Task 5 :

SELECT F.product_code, P.product, F.manufacturing_cost 
FROM fact_manufacturing_cost F JOIN dim_product P
ON F.product_code = P.product_code
WHERE manufacturing_cost
IN (
	SELECT MAX(manufacturing_cost) FROM fact_manufacturing_cost
    UNION
    SELECT MIN(manufacturing_cost) FROM fact_manufacturing_cost
    ) 
ORDER BY manufacturing_cost DESC ;

Task 6 :

SELECT c.customer_code, c.customer, round(AVG(pre_invoice_discount_pct),2) AS average_discount_percentage
FROM fact_pre_invoice_deductions d
JOIN dim_customer c ON d.customer_code = c.customer_code
WHERE c.market = "India" AND fiscal_year = "2021"
GROUP BY customer_code , c.customer
ORDER BY average_discount_percentage DESC
LIMIT 5;


Task 7 :

select sum(sold_quantity * gross_price)  as Gross_sales_amount ,   year(sm.date) Year , month(sm.date ) as month
from fact_gross_price gp
join fact_sales_monthly sm
on gp.product_code = sm.product_code
join dim_customer c
on c.customer_code = sm.customer_code
where c.customer = "Atliq Exclusive"
group by 2,3
order by Year ,month ;


task 8 : 

SELECT 
    CASE 
        WHEN MONTH(date) BETWEEN 1 AND 3 THEN 'Q1 2020'
        WHEN MONTH(date) BETWEEN 4 AND 6 THEN 'Q2 2020'
        WHEN MONTH(date) BETWEEN 7 AND 9 THEN 'Q3 2020'
        WHEN MONTH(date) BETWEEN 10 AND 12 THEN 'Q4 2020'
    END AS Quarter,
    SUM(sold_quantity) AS total_sold_quantity
FROM 
    fact_sales_monthly
WHERE 
    fiscal_year = 2020
GROUP BY 
    CASE 
        WHEN MONTH(date) BETWEEN 1 AND 3 THEN 'Q1 2020'
        WHEN MONTH(date) BETWEEN 4 AND 6 THEN 'Q2 2020'
        WHEN MONTH(date) BETWEEN 7 AND 9 THEN 'Q3 2020'
        WHEN MONTH(date) BETWEEN 10 AND 12 THEN 'Q4 2020'
    END
ORDER BY 	
    total_sold_quantity DESC
limit 1;

task 9:

WITH t1 as (SELECT c.channel channel_name , SUM (g.gross_price * s.sold_quantity) as gross_sales 
FROM fact_sales_monthly s
join fact_gross_price g
on g.product_code = s.product_code
join dim_customer c
on s.customer_code = c.customer_code
WHERE s.fiscal_year = 2021
group by channel_name
order by gross_sales  DESC ) 
SELECT channel_name ,  ROUND(gross_sales/1000000 ,2 ) as gross_sales_in_million , 
round(gross_sales/(sum(gross_sales) OVER())*100,2) AS percentage from t1 ;


Task 10: 

WITH t1 AS 
(
SELECT P.division, SUM(s.sold_quantity) AS Total_sold_quantity ,  s.product_code, P.product
FROM dim_product P 
JOIN fact_sales_monthly s
ON P.product_code = s.product_code
WHERE s.fiscal_year = 2021 
GROUP BY   division, P.product ,s.product_code
),
t2 AS 
(
SELECT division, 
        RANK() OVER(PARTITION BY division ORDER BY Total_sold_quantity DESC) AS 'Rank_Order' , product_code, product, Total_sold_quantity
FROM t1
)
 SELECT t1.division, t2.Total_sold_quantity, t2.Rank_Order ,t1.product_code, t1.product
 FROM t1 
 JOIN t2
 ON t1.product_code = t2.product_code
WHERE t2.Rank_Order <= 3;

















































